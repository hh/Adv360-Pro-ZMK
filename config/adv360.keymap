
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
     &kp PG_UP            &kp N1     &kp N2      &kp N3     &kp N4  &kp N5              &tog 1                                                                            &mo 3  &kp N6  &kp N7    &kp N8    &kp N9    &kp N0      &kp MINUS
 &kp PAGE_DOWN  &kp SINGLE_QUOTE  &kp COMMA  &kp PERIOD      &kp P   &kp Y               &none                                                                            &none   &kp F   &kp G     &kp C     &kp R     &kp L      &kp SLASH
       &kp ESC             &kp A      &kp O       &kp E      &kp U   &kp I               &none  &kp LCTRL        &kp LALT   &none   &none   &kp RIGHT_ALT  &kp RCTRL      &none   &kp D   &kp H     &kp T     &kp N     &kp S  &kp BACKSLASH
     &kp LSHFT     &kp SEMICOLON      &kp Q       &kp J      &kp K   &kp X               &none      &none  &kp LEFT_SHIFT   &none   &none  &kp LEFT_SHIFT      &none      &none   &kp B   &kp M     &kp W     &kp V     &kp Z      &kp RSHFT
         &mo 2         &kp GRAVE  &kp EQUAL    &kp LEFT  &kp RIGHT                    &kp BSPC    &kp TAB    &kp LEFT_GUI                   &kp RIGHT_GUI  &kp ENTER  &kp SPACE          &kp UP  &kp DOWN  &kp LBKT  &kp RBKT          &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &trans  &trans    &trans  &trans  &trans  &trans            &trans                                                         &trans  &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
 &trans  &trans    &trans  &trans  &trans  &trans            &trans                                                         &trans  &trans   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS  &trans
 &trans  &trans    &trans  &trans  &trans  &trans            &trans      &trans  &trans   &none   &none  &trans  &trans     &trans  &trans   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS  &trans
 &trans  &trans    &trans  &trans  &trans  &trans             &none       &none  &trans   &none   &none  &trans   &none      &none  &trans   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &trans
 &trans  &trans  &kp CAPS  &trans  &trans                    &trans  &kp DELETE  &trans                  &trans  &trans  &kp KP_N0              &trans        &trans     &kp KP_DOT           &trans  &trans
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3    &kp F4   &kp F5  &kp F6                 &trans                                                           &trans  &kp F7     &kp F8     &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans    &trans   &trans  &trans            &bootloader                                                      &bootloader  &trans     &trans     &trans   &trans   &trans   &trans
 &trans  &trans  &trans    &trans   &trans  &trans                 &reset      &trans  &trans   &none   &none  &trans  &trans       &reset  &trans     &trans     &trans   &trans   &trans   &trans
 &trans  &trans  &trans    &trans   &trans  &trans                  &none       &none  &trans   &none   &none  &trans   &none        &none  &trans     &trans     &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &kp HOME  &kp END                         &trans  &kp DELETE  &trans                  &trans  &trans       &trans          &kp PG_UP  &kp PG_DN   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                     &trans                                                                                    &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI                &bootloader                                                                               &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none  &rgb_ug RGB_SPD  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD                     &reset  &bt BT_CLR       &out OUT_USB   &none   &none  &out OUT_BLE  &bt BT_CLR           &reset         &none         &none         &none         &none         &none   &none
  &none         &none            &none            &none            &none            &none                      &none       &none   &ext_power EP_ON   &none   &none         &none       &none            &none         &none         &none         &none         &none         &none   &none
  &none         &none            &none       &bl BL_INC       &bl BL_DEC                             &rgb_ug RGB_TOG  &bl BL_TOG  &ext_power EP_OFF                         &none  &bl BL_TOG  &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

    };
};
